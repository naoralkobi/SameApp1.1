// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SameApp.Data;

#nullable disable

namespace SameApp.Migrations
{
    [DbContext(typeof(SameAppContext))]
    [Migration("20220525161303_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("SameApp.Models.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNameOwner")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Server")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id", "UserNameOwner");

                    b.HasIndex("UserName");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("SameApp.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactUserNameOwner")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContactId1", "ContactUserNameOwner");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("SameApp.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserName");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SameApp.Models.Contact", b =>
                {
                    b.HasOne("SameApp.Models.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserName");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SameApp.Models.Message", b =>
                {
                    b.HasOne("SameApp.Models.Contact", "Contact")
                        .WithMany("Messages")
                        .HasForeignKey("ContactId1", "ContactUserNameOwner");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("SameApp.Models.Contact", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("SameApp.Models.User", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
